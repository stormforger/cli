name: Go
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2.3.4

    - name: Read Go version
      id: read_versions
      run: |
        echo "::set-output name=go::$(go mod edit -json | jq -r .Go)"

    - name: Set up Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: "${{ steps.read_versions.outputs.go }}"
      id: go

    - uses: actions/cache@v2.1.6
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Print Go Version
      run: go version

    - name: Build
      run: go build -v .

    - name: Test
      run: go test -timeout 20m ./...

    - name: Vet
      run: go vet ./...

  gofmt:
    name: Run gofmt
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.4

    - name: Read go version
      id: read_versions
      run: |
        echo "::set-output name=go::$(go mod edit -json | jq -r .Go)"

    - name: Set up Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: "${{ steps.read_versions.outputs.go }}"
      id: go

    - name: gofmt
      run: |
        if [ "$(find . -iname '*.go' | xargs gofmt -l)" ]
        then
          find . -iname '*.go' | xargs gofmt -d
          exit 1
        fi
